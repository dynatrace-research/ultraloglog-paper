// Copyright (c) 2023 Dynatrace LLC. All rights reserved.
//
// This software and associated documentation files (the "Software")
// are being made available by Dynatrace LLC for purposes of
// illustrating the implementation of certain algorithms which have
// been published by Dynatrace LLC. Permission is hereby granted,
// free of charge, to any person obtaining a copy of the Software,
// to view and use the Software for internal, non-productive,
// non-commercial purposes only â€“ the Software may not be used to
// process live data or distributed, sublicensed, modified and/or
// sold either alone or as part of or in combination with any other
// software.
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

plugins {
	id 'java'
	id 'me.champeau.jmh' version '0.7.1'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.dynatrace.hash4j:hash4j:0.11.0'
	implementation group: 'org.hipparchus', name: 'hipparchus-stat', version: '2.3'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.9.3'
	testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.3'
	implementation 'org.apache.datasketches:datasketches-java:4.1.0'
	implementation group: 'org.openjdk.jol', name: 'jol-core', version: '0.17'
	implementation group: 'com.google.zetasketch', name: 'zetasketch', version: '0.1.0'
	implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.23.0'
	implementation group: 'org.tukaani', name: 'xz', version: '1.9'
	implementation group: 'com.github.luben', name: 'zstd-jni', version: '1.5.5-4'
}

test {
	useJUnitPlatform()
}

jmh {
	fork = 1
	timeUnit = 'us'
	failOnError = false
	timeOnIteration = '1s'
	warmupForks = 0
	warmupIterations = 5
	warmupBatchSize = 1
	warmup = '1s'
	iterations = 20
	resultFormat = 'JSON'
}


java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
	withJavadocJar()
	withSourcesJar()
}

sourceSets {
	jmh
	main
	test
}

task runCompressionSimulation8(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	mainClass = 'com.dynatrace.ullpaper.CompressionSimulation'
	args '../results/compression/compression8.csv','8'
	jvmArgs '-Xmx16g'
	outputs.files "../results/compression/compression8.csv"
}

task runCompressionSimulation12(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	mainClass = 'com.dynatrace.ullpaper.CompressionSimulation'
	args '../results/compression/compression12.csv','12'
	jvmArgs '-Xmx16g'
	outputs.files "../results/compression/compression12.csv"
}

task runCompressionSimulation16(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	mainClass = 'com.dynatrace.ullpaper.CompressionSimulation'
	args '../results/compression/compression16.csv','16'
	jvmArgs '-Xmx16g'
	outputs.files "../results/compression/compression16.csv"
}

task runCompressionSimulation {
	dependsOn runCompressionSimulation8, runCompressionSimulation12, runCompressionSimulation16
}

task runEmpiricalMVPComputation(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	mainClass = 'com.dynatrace.ullpaper.EmpiricalMVPComputation'
	jvmArgs '-Xmx16g'
	outputs.files "../results/comparison-empirical-mvp/Apache Data Sketches Java CPC.csv",
			"../results/comparison-empirical-mvp/Apache Data Sketches Java HLL4.csv",
			"../results/comparison-empirical-mvp/Apache Data Sketches Java HLL6.csv",
			"../results/comparison-empirical-mvp/Apache Data Sketches Java HLL8.csv",
			"../results/comparison-empirical-mvp/Google Zetasketch Dense.csv",
			"../results/comparison-empirical-mvp/Google Zetasketch Sparse.csv",
			"../results/comparison-empirical-mvp/Hash4j HyperLogLog CR.csv",
			"../results/comparison-empirical-mvp/Hash4j HyperLogLog ML.csv",
			"../results/comparison-empirical-mvp/Hash4j UltraLogLog FGRA.csv",
			"../results/comparison-empirical-mvp/Hash4j UltraLogLog ML.csv"
}


tasks.register('copyBenchmarkReport', Copy) {
	from('build/results/jmh/') {
		include 'results.json'
		rename 'results', 'benchmark-results'
	}
	into '../results'
}

tasks.register('deleteBenchmarkReport', Delete) {
	delete 'build/results/jmh/results.json'
}


tasks.jmh.finalizedBy copyBenchmarkReport
tasks.copyBenchmarkReport.finalizedBy deleteBenchmarkReport


